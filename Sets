import java.util.HashSet;
import java.util.Set;
//一个Set工具类 用泛型表达数学中的关系式
public class Sets {
	/**
	 * 泛型方法
	 * @param a
	 * @param b
	 * @return  返回 a b之和
	 */
	public static <T> Set<T> union(Set<T> a, Set<T> b){
		Set<T> result = new HashSet<T>(a);
		result.addAll(b);
		return result;
	}
	/**
	 * 交集 
	 * @param a
	 * @param b
	 * @return 返回共有的部分
	 */
	public static <T> Set<T> intersection(Set<T> a, Set<T> b){
		Set<T> result = new HashSet<T>(a);
		result.retainAll(b);
		return result;
	}
	/**
	 * 从superset 中移除 subset包含的元素
	 * @param superset
	 * @param subset
	 * @return superset
	 */
	public static <T> Set<T> difference(Set<T> superset, Set<T> subset){
		Set<T> result = new HashSet<T>(superset);
		result.remove(subset);
		return result;
	}
	/**
	 * 返回除交集以外的所有元素
	 * @param a
	 * @param b
	 * @return
	 */
	public static <T> Set<T> complement(Set<T> a, Set<T> b){
		return difference(union(a, b),intersection(a, b));
	}
		
}
